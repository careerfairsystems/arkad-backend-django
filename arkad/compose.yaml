services:
  db:
    restart: unless-stopped
    image: postgres:16
    volumes:
      - ./postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=arkad_db_user
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=arkad
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U arkad_db_user -d arkad"]
      interval: 5s
      timeout: 5s

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: redis-server --save 300 1 --loglevel warning
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10

  celery-worker:
    build: .
    restart: unless-stopped
    command: celery -A arkad worker -l info --concurrency=4
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - media_volume:/app/arkad/media
      - ./config:/app/arkad/config
      - ./private:/app/arkad/private

  celery-beat:
    build: .
    restart: unless-stopped
    command: sh -c "mkdir -p /app/arkad/celerybeat && celery -A arkad beat -l info --schedule /app/arkad/celerybeat/schedule.db"
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - media_volume:/app/arkad/media
      - ./config:/app/arkad/config
      - ./private:/app/arkad/private
      - celery_beat_schedule:/app/arkad/celerybeat

volumes:
  media_volume:
  redis_data:
  celery_beat_schedule:
