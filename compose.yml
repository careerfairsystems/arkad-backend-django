services:
  web:
    command: "cd arkad && gunicorn --workers 8 --timeout 16 --bind 0.0.0.0:8000 arkad.wsgi:application"
    build: .
    environment:
      - DEBUG=${DEBUG}  # Must be False in production!
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DB_HOST=db
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "python arkad/manage.py check --database default"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - arkad_network
    volumes:
      - static_volume:/app/arkad/static
      - media_volume:/app/arkad/media

  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=arkad
      - POSTGRES_USER=arkad_db_user
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U arkad_db_user -d arkad"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - arkad_network

  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/app/arkad/static
      - media_volume:/app/arkad/media
    ports:
      - "80:80"
    depends_on:
      - web
    networks:
      - arkad_network

volumes:
  postgres_data:
  static_volume:
  media_volume:

networks:
  arkad_network:
    driver: bridge
